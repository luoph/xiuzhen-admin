status=warn
name=xiuzhen

# Give directory path where log files should get stored
property.project=xiuzhen-admin
property.basePath=/data/1101studio/log/${project}
property.logPattern=[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5p] [%M(%F:%L)] - %m%n
property.expireDays=90d

appenders=console,debug,info,error,sentry

# Console
appender.console.name=consoleLog
appender.console.type=Console
appender.console.target=SYSTEM_OUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=${logPattern}
appender.console.layout.charset=UTF-8


# debug log
appender.debug.name=debugLog
appender.debug.type=RollingFile
appender.debug.layout.type=PatternLayout
appender.debug.layout.pattern=${logPattern}
appender.debug.layout.charset=UTF-8
appender.debug.fileName=${basePath}/debug.log
appender.debug.filePattern=${basePath}/debug_%d{yyyyMMdd}.log.gz
appender.debug.filter.levelRange.type=LevelRangeFilter
appender.debug.filter.levelRange.minLevel=debug
appender.debug.filter.levelRange.maxLevel=debug
appender.debug.filter.levelRange.onMatch=ACCEPT
appender.debug.policies.type=Policies
#appender.debug.policies.size.type=SizeBasedTriggeringPolicy
#appender.debug.policies.size.size=10MB
# Rotate log file each day and keep 30 days worth
appender.debug.policies.time.type=TimeBasedTriggeringPolicy
appender.debug.policies.time.interval=1
appender.debug.policies.time.modulate=true
appender.debug.strategy.type=DefaultRolloverStrategy
appender.debug.strategy.delete.type=Delete
appender.debug.strategy.delete.basePath=${basePath}
appender.debug.strategy.delete.maxDepth=1
appender.debug.strategy.delete.ifLastModified.type=IfLastModified
# Delete files older than 90 days
appender.debug.strategy.delete.ifLastModified.age=${expireDays}


# info log
appender.info.name=infoLog
appender.info.type=RollingFile
appender.info.layout.type=PatternLayout
appender.info.layout.pattern=${logPattern}
appender.info.layout.charset=UTF-8
appender.info.fileName=${basePath}/info.log
appender.info.filePattern=${basePath}/info_%d{yyyyMMdd}.log.gz
appender.info.filter.levelRange.type=LevelRangeFilter
appender.info.filter.levelRange.minLevel=info
appender.info.filter.levelRange.maxLevel=info
appender.info.filter.levelRange.onMatch=ACCEPT
appender.info.policies.type=Policies
#appender.info.policies.size.type=SizeBasedTriggeringPolicy
#appender.info.policies.size.size=10MB
# Rotate log file each day and keep 30 days worth
appender.info.policies.time.type=TimeBasedTriggeringPolicy
appender.info.policies.time.interval=1
appender.info.policies.time.modulate=true
appender.info.strategy.type=DefaultRolloverStrategy
appender.info.strategy.delete.type=Delete
appender.info.strategy.delete.basePath=${basePath}
appender.info.strategy.delete.maxDepth=1
appender.info.strategy.delete.ifLastModified.type=IfLastModified
# Delete files older than 90 days
appender.info.strategy.delete.ifLastModified.age=${expireDays}


# error log
appender.error.name=errorLog
appender.error.type=RollingFile
appender.error.layout.type=PatternLayout
appender.error.layout.pattern=${logPattern}
appender.error.layout.charset=UTF-8
appender.error.fileName=${basePath}/error.log
appender.error.filePattern=${basePath}/error_%d{yyyyMMdd}.log.gz
appender.error.filter.levelRange.type=LevelRangeFilter
appender.error.filter.levelRange.minLevel=fatal
appender.error.filter.levelRange.maxLevel=error
appender.error.filter.levelRange.onMatch=ACCEPT
appender.error.policies.type=Policies
#appender.error.policies.size.type=SizeBasedTriggeringPolicy
#appender.error.policies.size.size=10MB
# Rotate log file each day and keep 30 days worth
appender.error.policies.time.type=TimeBasedTriggeringPolicy
appender.error.policies.time.interval=1
appender.error.policies.time.modulate=true
appender.error.strategy.type=DefaultRolloverStrategy
appender.error.strategy.delete.type=Delete
appender.error.strategy.delete.basePath=${basePath}
appender.error.strategy.delete.maxDepth=1
appender.error.strategy.delete.ifLastModified.type=IfLastModified
# Delete files older than 90 days
appender.error.strategy.delete.ifLastModified.age=${expireDays}

# sentry
appender.sentry.name=sentryLog
appender.sentry.type=Sentry
#appender.sentry.level=warn
appender.sentry.filter.levelRange.type=LevelRangeFilter
appender.sentry.filter.levelRange.minLevel=fatal
appender.sentry.filter.levelRange.maxLevel=error
appender.sentry.filter.levelRange.onMatch=ACCEPT


loggers=spring,mybatis,ibatis,hikari,sentry

# Spring framework
logger.spring.name=org.springframework
logger.spring.level=info

# mybatis
logger.mybatis.name=org.mybatis
logger.mybatis.level=info

logger.ibatis.name=org.apache.ibatis
logger.ibatis.level=debug

# hikari
logger.hikari.name=com.zaxxer.hikari
logger.hikari.level=info

# sentry
logger.sentry.name=io.sentry
logger.sentry.level=error

# root logger
rootLogger.level=debug
rootLogger.additivity=false
rootLogger.appenderRefs=console,debug,info,error,sentry
rootLogger.appenderRef.console.ref=consoleLog
rootLogger.appenderRef.debug.ref=debugLog
rootLogger.appenderRef.info.ref=infoLog
rootLogger.appenderRef.error.ref=errorLog
rootLogger.appenderRef.sentry.ref=sentryLog
